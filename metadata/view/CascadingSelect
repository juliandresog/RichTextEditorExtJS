{
    "type": "Ext.container.Viewport",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "container|align": "center",
        "container|pack": "center",
        "designer|initialView": true,
        "designer|userAlias": "cascadingselect",
        "designer|userClassName": "CascadingSelect",
        "layout": "vbox",
        "scrollable": "vertical"
    },
    "configAlternates": {
        "container|align": "string",
        "container|pack": "string",
        "designer|initialView": "boolean",
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "layout": "string",
        "scrollable": "auto"
    },
    "designerId": "f32eb8c1-4d90-4784-8243-30240cb7369b",
    "viewControllerInstanceId": "7b3dba86-06b6-4742-a678-763fde7160a9",
    "viewModelInstanceId": "c70e76b6-b06d-44f8-b5bb-a38c841cb075",
    "cn": [
        {
            "type": "Ext.form.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "bodyPadding": 10,
                "itemId": null,
                "title": "Select Car",
                "width": 500
            },
            "configAlternates": {
                "bodyPadding": "auto",
                "itemId": "string",
                "title": "string",
                "width": "auto"
            },
            "name": "MyForm",
            "designerId": "36195c1d-3983-4361-9de3-516a12635eea",
            "cn": [
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "displayField": "value",
                        "editable": false,
                        "fieldLabel": "Make",
                        "itemId": null,
                        "labelAlign": "right",
                        "labelWidth": 70,
                        "layout|anchor": "100%",
                        "reference": "makerField",
                        "valueField": "id"
                    },
                    "configAlternates": {
                        "displayField": "datafield",
                        "editable": "boolean",
                        "fieldLabel": "string",
                        "itemId": "string",
                        "labelAlign": "string",
                        "labelWidth": "number",
                        "layout|anchor": "string",
                        "reference": "string",
                        "valueField": "datafield"
                    },
                    "name": "MyComboBox",
                    "designerId": "6cb9e8a0-85cd-4843-8a44-cacaa9b35146",
                    "cn": [
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onMakerFieldChange",
                                "implHandler": [
                                    "var refs = this.getReferences(),",
                                    "    seriesField = refs.seriesField;",
                                    "",
                                    "// Special case: we chose the \"choose a maker\" option",
                                    "if (!newValue) {",
                                    "",
                                    "    seriesField.hide();",
                                    "",
                                    "} else {",
                                    "",
                                    "",
                                    "    // Clear selected series value",
                                    "    seriesField.setValue('');",
                                    "",
                                    "",
                                    "    // Update the series dropdown",
                                    "    var data = this.getStore('cars').getValues('series', { maker: newValue }),",
                                    "        store = new Ext.data.Store({",
                                    "            fields: ['id', 'value'],",
                                    "            data: data",
                                    "        });",
                                    "    seriesField.bindStore(store);",
                                    "",
                                    "    // Show the series field",
                                    "    seriesField.show();",
                                    "",
                                    "}",
                                    "",
                                    "// Hide later parts of the form",
                                    "refs.modelField.hide();",
                                    "refs.doneButton.hide();"
                                ],
                                "name": "change",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onMakerFieldChange",
                            "designerId": "fb7567d9-c32b-4683-8aa9-90b6ae0bd341"
                        }
                    ]
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "displayField": "value",
                        "editable": false,
                        "fieldLabel": "Series",
                        "itemId": null,
                        "labelAlign": "right",
                        "labelWidth": 70,
                        "layout|anchor": "100%",
                        "reference": "seriesField",
                        "valueField": "id"
                    },
                    "configAlternates": {
                        "displayField": "datafield",
                        "editable": "boolean",
                        "fieldLabel": "string",
                        "itemId": "string",
                        "labelAlign": "string",
                        "labelWidth": "number",
                        "layout|anchor": "string",
                        "reference": "string",
                        "valueField": "datafield"
                    },
                    "name": "MyComboBox1",
                    "designerId": "9d2be18f-261b-4da7-8eea-b618cb0a8292",
                    "cn": [
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onSeriesFieldChange",
                                "implHandler": [
                                    "var refs = this.getReferences(),",
                                    "    modelField = refs.modelField,",
                                    "    makerField = refs.makerField;",
                                    "",
                                    "// Special case: we chose the \"choose a series\" option",
                                    "if (!newValue) {",
                                    "",
                                    "    modelField.hide();",
                                    "",
                                    "} else {",
                                    "",
                                    "    // Clear selected model value",
                                    "    modelField.setValue('');",
                                    "",
                                    "    // Update the model dropdown",
                                    "    var data = this.getStore('cars').getValues('model', { maker: makerField.getValue(), series: newValue }),",
                                    "        store = new Ext.data.Store({",
                                    "            fields: ['id', 'value'],",
                                    "            data: data",
                                    "        });",
                                    "    modelField.bindStore(store);",
                                    "",
                                    "    // Show the series field",
                                    "    modelField.show();",
                                    "",
                                    "}",
                                    "",
                                    "// Hide later parts of the form",
                                    "refs.doneButton.hide();"
                                ],
                                "name": "change",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onSeriesFieldChange",
                            "designerId": "08724a17-972a-4d45-8efe-5b071c859770"
                        }
                    ]
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "displayField": "value",
                        "editable": false,
                        "fieldLabel": "Model",
                        "itemId": null,
                        "labelAlign": "right",
                        "labelWidth": 70,
                        "layout|anchor": "100%",
                        "reference": "modelField",
                        "valueField": "id"
                    },
                    "configAlternates": {
                        "displayField": "datafield",
                        "editable": "boolean",
                        "fieldLabel": "string",
                        "itemId": "string",
                        "labelAlign": "string",
                        "labelWidth": "number",
                        "layout|anchor": "string",
                        "reference": "string",
                        "valueField": "datafield"
                    },
                    "name": "MyComboBox2",
                    "designerId": "2f5b856e-99f3-4b56-88fd-afaef4832ef0",
                    "cn": [
                        {
                            "type": "viewcontrollereventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onModelFieldChange",
                                "implHandler": [
                                    "var button = this.getReferences().doneButton;",
                                    "if (newValue) {",
                                    "    button.show();",
                                    "} else {",
                                    "    button.hide();",
                                    "}"
                                ],
                                "name": "change",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onModelFieldChange",
                            "designerId": "74c95e6b-39bd-4ee7-8fd1-c89a5b39f919"
                        }
                    ]
                },
                {
                    "type": "Ext.container.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|align": "middle",
                        "container|pack": "center",
                        "layout": "hbox",
                        "margin": "10 0 10 0"
                    },
                    "configAlternates": {
                        "container|align": "string",
                        "container|pack": "string",
                        "layout": "string",
                        "margin": "auto"
                    },
                    "name": "MyContainer",
                    "designerId": "eeaab065-fee1-46fb-9ba1-0c921de7fd66",
                    "cn": [
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "itemId": null,
                                "reference": "doneButton",
                                "text": "Choose Car"
                            },
                            "configAlternates": {
                                "itemId": "string",
                                "reference": "string",
                                "text": "string"
                            },
                            "name": "MyButton",
                            "designerId": "dd639517-19d3-492e-a920-fe6be32645b3",
                            "cn": [
                                {
                                    "type": "viewcontrollereventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onDoneButtonClick",
                                        "implHandler": [
                                            "var title = 'Car Selected',",
                                            "    message = 'You chose a great car!';",
                                            "",
                                            "Ext.Msg.alert(title, message);"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onDoneButtonClick",
                                    "designerId": "6c2aa15b-9193-407e-9381-837136618ab5"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onFormRender",
                        "implHandler": [
                            "var refs = this.getReferences(),",
                            "    makerField = refs.makerField;",
                            "",
                            "// Populate the maker field",
                            "var data = this.getStore('cars').getValues('maker'),",
                            "    store = new Ext.data.Store({",
                            "        fields: ['id', 'value'],",
                            "        data: data",
                            "    });",
                            "makerField.bindStore(store);",
                            "",
                            "// Hide later parts of the form",
                            "refs.seriesField.hide();",
                            "refs.modelField.hide();",
                            "refs.doneButton.hide();"
                        ],
                        "name": "render",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onFormRender",
                    "designerId": "3f3bd5f2-45df-4185-b6df-087b0db46593"
                }
            ]
        },
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "bodyPadding": 10,
                "height": 800,
                "layout": "fit",
                "padding": 10,
                "title": "https://richtexteditor.com",
                "width": 910
            },
            "configAlternates": {
                "bodyPadding": "auto",
                "height": "auto",
                "layout": "string",
                "padding": "auto",
                "title": "string",
                "width": "auto"
            },
            "name": "MyPanel",
            "designerId": "95de1ae8-3d55-436c-a8dd-5d763093cdc4",
            "cn": [
                {
                    "type": "Ext.form.Label",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "html": "<div id=\"div_editor_boos\"  style=\"min-height:300px;max-height:600px\">        <p>Initial Document Ejemplo para BOOS SAS</p>      </div> "
                    },
                    "configAlternates": {
                        "html": "string"
                    },
                    "name": "MyLabel",
                    "designerId": "cf5a7d1d-e0a4-4abd-9df2-6907e9c7139c"
                },
                {
                    "type": "viewcontrollereventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onPanelWYSYAfterRender",
                        "implHandler": [
                            "var config = {};",
                            "",
                            "var file_upload_handler = function (file, callback, optionalIndex, optionalFiles) {",
                            "    var uploadhandlerpath = \"/imageupload.ashx\";",
                            "",
                            "    console.log(\"upload\", file, \"to\", uploadhandlerpath);",
                            "",
                            "    function append(parent, tagname, csstext) {",
                            "        var tag = parent.ownerDocument.createElement(tagname);",
                            "        if (csstext) tag.style.cssText = csstext;",
                            "        parent.appendChild(tag);",
                            "        return tag;",
                            "    }",
                            "",
                            "    var uploadcancelled = false;",
                            "",
                            "    var dialogouter = append(document.body, \"div\", \"display:flex;align-items:center;justify-content:center;z-index:999999;position:fixed;left:0px;top:0px;width:100%;height:100%;background-color:rgba(128,128,128,0.5)\");",
                            "    var dialoginner = append(dialogouter, \"div\", \"background-color:white;border:solid 1px gray;border-radius:15px;padding:15px;min-width:200px;box-shadow:2px 2px 6px #7777\");",
                            "",
                            "    var line1 = append(dialoginner, \"div\", \"text-align:center;font-size:1.2em;margin:0.5em;\");",
                            "    line1.innerText = \"Uploading...\";",
                            "",
                            "    var totalsize = file.size;",
                            "    var sentsize = 0;",
                            "",
                            "    if (optionalFiles && optionalFiles.length > 1) {",
                            "        totalsize = 0;",
                            "        for (var i = 0; i < optionalFiles.length; i++) {",
                            "            totalsize += optionalFiles[i].size;",
                            "            if (i < optionalIndex) sentsize = totalsize;",
                            "        }",
                            "        console.log(totalsize, optionalIndex, optionalFiles);",
                            "        line1.innerText = \"Uploading...\" + (optionalIndex + 1) + \"/\" + optionalFiles.length;",
                            "    }",
                            "",
                            "    var line2 = append(dialoginner, \"div\", \"text-align:center;font-size:1.0em;margin:0.5em;\");",
                            "    line2.innerText = \"0%\";",
                            "",
                            "    var progressbar = append(dialoginner, \"div\", \"border:solid 1px gray;margin:0.5em;\");",
                            "    var progressbg = append(progressbar, \"div\", \"height:12px\");",
                            "",
                            "    var line3 = append(dialoginner, \"div\", \"text-align:center;font-size:1.0em;margin:0.5em;\");",
                            "    var btn = append(line3, \"button\");",
                            "    btn.className = \"btn btn-primary\";",
                            "    btn.innerText = \"cancel\";",
                            "    btn.onclick = function () {",
                            "        uploadcancelled = true;",
                            "        xh.abort();",
                            "    };",
                            "",
                            "    var xh = new XMLHttpRequest();",
                            "    xh.open(\"POST\", uploadhandlerpath + \"?name=\" + encodeURIComponent(file.name) + \"&type=\" + encodeURIComponent(file.type) + \"&size=\" + file.size, true);",
                            "    xh.onload = xh.onabort = xh.onerror = function (pe) {",
                            "        console.log(pe);",
                            "        console.log(xh);",
                            "        dialogouter.parentNode.removeChild(dialogouter);",
                            "        if (pe.type == \"load\") {",
                            "            if (xh.status != 200) {",
                            "                console.log(\"uploaderror\", pe);",
                            "                if (xh.responseText.startsWith(\"ERROR:\")) {",
                            "                    callback(null, \"http-error-\" + xh.responseText.substring(6));",
                            "                }",
                            "                else {",
                            "                    callback(null, \"http-error-\" + xh.status);",
                            "                }",
                            "            }",
                            "            else if (xh.responseText.startsWith(\"READY:\")) {",
                            "                console.log(\"File uploaded to \" + xh.responseText.substring(6));",
                            "                callback(xh.responseText.substring(6));",
                            "            }",
                            "            else {",
                            "                callback(null, \"http-error-\" + xh.responseText);",
                            "            }",
                            "        }",
                            "        else if (uploadcancelled) {",
                            "            console.log(\"uploadcancelled\", pe);",
                            "            callback(null, \"cancelled\");",
                            "        }",
                            "        else {",
                            "            console.log(\"uploaderror\", pe);",
                            "            callback(null, pe.type);",
                            "        }",
                            "    };",
                            "    xh.upload.onprogress = function (pe) {",
                            "        console.log(pe);",
                            "        //pe.total",
                            "        var percent = Math.floor(100 * (sentsize + pe.loaded) / totalsize);",
                            "        line2.innerText = percent + \"%\";",
                            "",
                            "        progressbg.style.cssText = \"background-color:green;width:\" + (percent * progressbar.offsetWidth / 100) + \"px;height:12px;\";",
                            "    };",
                            "    xh.send(file);",
                            "};",
                            "",
                            "//config.file_upload_handler = file_upload_handler;",
                            "config.editorResizeMode=\"height\";",
                            "",
                            "",
                            "//var editor1 = new RichTextEditor(\"#div_editor1\", { editorResizeMode: \"height\" });",
                            "//var editor1 = new RichTextEditor(\"#div_editor_boos\", config);",
                            "var editor1 = new RichTextEditor(\"#div_editor_boos\");",
                            "//editor1.setHTMLCode(\"Use inline HTML or setHTMLCode to init the default content.\");"
                        ],
                        "name": "afterrender",
                        "scope": "me"
                    },
                    "configAlternates": {
                        "fn": "string",
                        "implHandler": "code",
                        "name": "string",
                        "scope": "string"
                    },
                    "name": "onPanelWYSYAfterRender",
                    "designerId": "db20514b-c577-4caa-944d-b4ffc0c3c558"
                }
            ]
        }
    ]
}